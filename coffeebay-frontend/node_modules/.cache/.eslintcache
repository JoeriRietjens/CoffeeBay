[{"C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\index.js":"1","C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\App.js":"2","C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\components\\login\\index.js":"4","C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\components\\register\\index.js":"5","C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\components\\coffeebay\\Main\\index.js":"6","C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\components\\product\\index.js":"7"},{"size":504,"mtime":1633946477858,"results":"8","hashOfConfig":"9"},{"size":1044,"mtime":1638469385376,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1663,"mtime":1637585863360,"results":"12","hashOfConfig":"9"},{"size":2051,"mtime":1637576598484,"results":"13","hashOfConfig":"9"},{"size":4445,"mtime":1641990803973,"results":"14","hashOfConfig":"9"},{"size":208,"mtime":1639405551718,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ecbsdv",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\index.js",[],["33","34"],"C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\App.js",[],"C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\components\\login\\index.js",[],"C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\components\\register\\index.js",[],"C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\components\\coffeebay\\Main\\index.js",["35","36","37"],"//import { Product } from \"../../product\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\n//import Product from \"../product\"\r\n\r\nimport Stomp from \"stompjs\";\r\nimport \"./styles2.scss\"\r\n\r\nexport const Coffeebay = () => {\r\n  const username= \"\";\r\n\r\n  const [userOrder, setUserOrders] = useState({ products: [], ready: false} );\r\n  const [product, setProduct] = useState({ name: \"\", ready: false });\r\n\r\n  const connect = () => {\r\n    let token = localStorage.getItem(\"JWT\");\r\n    let parsedToken = parseJwt(token);\r\n    global.username = parsedToken.sub;\r\n    console.log(\"username: \", parsedToken.sub)\r\n    const socket = new WebSocket(\"ws://localhost:8080/coffeebay-socket\");\r\n    global.stompClient = Stomp.over(socket);\r\n    global.stompClient.connect({}, onConnected, onError);\r\n  }\r\n\r\n  const parseJwt = (token) => {\r\n    if (!token) {\r\n      return;\r\n    }\r\n    const base64Url = token.split(\".\")[1];\r\n    const base64 = base64Url.replace(\"-\", \"+\").replace(\"_\", \"/\");\r\n    return JSON.parse(window.atob(base64));\r\n  };\r\n\r\n  const onConnected = () => {\r\n    console.log(\"here\")\r\n    console.log(\"userOrder: \", userOrder)\r\n    global.stompClient.subscribe(\"/topic/public\", onMessageReceived);\r\n    global.stompClient.send(\"/app/chat.newUser\",\r\n      {},\r\n      JSON.stringify({ sender: global.username, type: \"CONNECT\" })\r\n    );\r\n\r\n  };\r\n\r\n  const onMessageReceived = (payload) => {\r\n    const message = JSON.parse(payload.body);\r\n    if(message.type === \"CONNECT\"){\r\n      console.log(\"hi\");\r\n    }\r\n    if(message.type === \"CHAT\"){\r\n      console.log(\"hi2\");\r\n    }\r\n  }\r\n  \r\n  const onError = (error) => {\r\n      console.log(\"Could not find the connection you were looking for. Move along. Or, Refresh the page!\");\r\n  };\r\n\r\n  const sendMessage =(e) => {\r\n    e.preventDefault();\r\n    let messageContent = userOrder;\r\n\r\n    if(messageContent && global.stompClient) {\r\n      console.log(\"messageContent: \", messageContent)\r\n      const orderMessage = {\r\n        sender: global.username,\r\n        content: messageContent,\r\n        type: \"CHAT\",\r\n      };\r\n      global.stompClient.send(\r\n        \"/app/chat.send\",\r\n        {},\r\n        JSON.stringify(orderMessage)\r\n      );\r\n      console.log(orderMessage)\r\n\r\n    }\r\n  }\r\n\r\n  const inputChange = (e) => {\r\n    // setOrders({ ...userOrder.products, [e.target.name]: e.target.value })\r\n    setUserOrders({\"products\": [{\"name\":e.target.value}], \"ready\": false})\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    \r\n    e.preventDefault();\r\n\r\n    // //orders.push(ready: false)\r\n    // setUserOrders({\"products\": [{\"name\":e.target.value}], \"ready\": false})\r\n    console.log(userOrder)\r\n\r\n    //orders.push({name: product.name, ready: false})\r\n    //setOrders(tempOrders)\r\n\r\n    //orders.push(product)\r\n    setProduct(\"\")\r\n    \r\n    // console.log(\"order\", orders)\r\n    // console.log(product)\r\n    //  const requestOptions = {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   mode: \"cors\",\r\n    //   body: JSON.stringify(product),\r\n    // };\r\n\r\n    //  fetch(\"http://localhost:8080/order/newOrder\", requestOptions)\r\n\r\n    //  .then((response) => response.json())\r\n    \r\n     //.then((json) => setOrders([...orders, json]))\r\n\r\n    // .then((json) => setProduct(json))\r\n    // .then(console.log(\"product: \", product))\r\n     //.catch(function (error) {\r\n       // console.log(error);\r\n      //});\r\n  }\r\n  \r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <div>\r\n          <form onSubmit={(e) => onSubmit(e)}>\r\n            <label>Add Coffee</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"What would you like to order\"\r\n              onChange={(e) => inputChange(e)}\r\n            />\r\n            <button type=\"submit\">Add Coffee</button>\r\n          </form>\r\n          <form\r\n                id=\"login-form\"\r\n                name=\"login-form\"\r\n                onSubmit={(e) => sendMessage(e)}\r\n              >\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-append\">\r\n                    <button className=\"fas fa-location-arrow\" type=\"submit\">\r\n                      Send\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              <button onClick={() => {\r\n                connect();\r\n              }}>Connect</button>\r\n        </div>\r\n\r\n        <h1>ORDERS</h1>\r\n\r\n      </div>\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\n","C:\\Users\\joeri\\OneDrive\\Documenten\\S3 Maatwerk\\coffeebay\\coffeebay-frontend\\src\\components\\product\\index.js",[],["38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":37,"nodeType":"46","messageId":"47","endLine":2,"endColumn":46},{"ruleId":"44","severity":1,"message":"48","line":9,"column":9,"nodeType":"46","messageId":"47","endLine":9,"endColumn":17},{"ruleId":"44","severity":1,"message":"49","line":12,"column":10,"nodeType":"46","messageId":"47","endLine":12,"endColumn":17},{"ruleId":"40","replacedBy":"50"},{"ruleId":"42","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","'product' is assigned a value but never used.",["52"],["53"],"no-global-assign","no-unsafe-negation"]